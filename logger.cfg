
#关于cfg文件的配置规则
#
# 1."#"为配置的注释，以"#"开头的语句在解析时会忽略掉。
#
#
# 2.命令类似脚本执行过程，解释性顺序执行。
#     a,每个使用到的对象必须在之前已经定义过。
#
#
# 3.命令的基本结构如为[command].[object].[property] = value;
#
#     b,命令只有四个，分别为root,catagory,logger,layout。
#
#       root    命令有两个意义，一是定义root节点的优先级；由于root本身也是一个catagory，因此
#               第二个意义则于catagory一样。
#
#               比如 root.priority = DEBUG 则表示root节点的优先级会DEBUG级别。
#
#
#       catagory命令的结构为catagory.object[.subobject].property = value;
#
#               当命令结构为catagory.object.property时，object为子分类对象，且该对象必须在
#               之前已经定义过。
#
#               当命令结构为catagory.object.subobject.property时,object同上，subobject
#               为当前命令需要创建的subcatagory。
#
#               当前catagory和root支持的property只有priority和logging
#
#               当property为logging时，value为两个值name,type;name表示当前的catagory需要
#               创建的logger的名称，type表示需要创建什么类型的logger，name必须保持与其它名称
#               不一样，type目前只能是file，rollingfile，console。它们分别表示filelogger，
#               rollingfilelogger，consolelogger
#
#
#       logger  命令的结构为logger.object.property = value;
#
#               logger表明当前命令执行logger命令。
#
#               object为logger对象，该对象必须在前面的语句中已经定义过。
#
#               logger命令支持的property比较灵活，但易于出错。对于不同类型的logger，属性也不
#               相同。
#
#               filelogger支持的property有logfile,maxsize,layouting.
#
#               rollingfilelogger 支持的property有logfile,maxsize,layouting,maxrolling.
#
#               consolelogger 支持的property有layouting,stream。
#
#               stream只支持stdout，stdin，stderr。
#
#               layouting只支持basicLayout，patternLayout
#
#
#
#       layout  命令结构为layout.loggerobject.property = value;
#
#               loggerobject 为logger对象，必须已经定义过的对象。
#
#               当前layout命令只有一种情况下才会有property，就是当logger对象的layouting定义
#
#               为patternLayout时才会有property，且property为pattern。
#
#               当property为pattern时，value必须用""包起来。
#

root.priority = DEBUG;


root.sub.priority = INFO;
root.sub.sub1.priority = INFO;
root.sub.sub2.priority = ERROR;

catagory.sub.logging = file,file;
catagory.sub1.logging = rfile,rollingFile;
catagory.sub2.logging = csl,console;

logger.file.logfile = "f:/log.txt";
logger.file.maxsize = 3;
logger.file.layouting = basicLayout;

logger.rfile.logfile = "f:/log1.txt";
logger.rfile.maxsize = 2;
logger.rfile.layouting = patternLayout;
logger.rfile.maxrolling = 5;
layout.rfile.pattern = "%H%M%S";

logger.csl.stream = stdout;

